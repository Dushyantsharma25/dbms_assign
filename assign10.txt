root@csl4-V520-15IKL:/home/csl-4/Documents/7323# mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2025-09-24T11:04:15.503+0530 I STORAGE  [initandlisten] 
2025-09-24T11:04:15.503+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2025-09-24T11:04:15.503+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2025-09-24T11:04:19.734+0530 I CONTROL  [initandlisten] 
2025-09-24T11:04:19.734+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2025-09-24T11:04:19.734+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2025-09-24T11:04:19.734+0530 I CONTROL  [initandlisten] 

*** using database ***

> use freedom
switched to db freedom
> db.senani.drop()
true

*** inserting to senani named collection ***

> db.senani.insertMany([
...   {name:"Sukhdev", age:24, department:"IT"},
...   {name:"Rajguru", age:26, department:"Research"},
...   {name:"Bhagat", age:26, department:"Comp"},
...   {name:"Ajad", age:30, department:"IT"}
... ])
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("68d38d7f2eb9f5d9d0810e11"),
		ObjectId("68d38d7f2eb9f5d9d0810e12"),
		ObjectId("68d38d7f2eb9f5d9d0810e13"),
		ObjectId("68d38d7f2eb9f5d9d0810e14")
	]
}


*** creating a index for ascending order of age ***

> db.senani.createIndex({ age: 1 })
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
}

*** creating a index for ascending order of department ***

> db.senani.createIndex({ department: 1 })
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 2,
	"numIndexesAfter" : 3,
	"ok" : 1
}

*** displaying indexes ***

> db.senani.getIndexes()
[
	{
		"v" : 2,
		"key" : {
			"_id" : 1
		},
		"name" : "_id_",
		"ns" : "freedom.senani"
	},
	{
		"v" : 2,
		"key" : {
			"age" : 1
		},
		"name" : "age_1",
		"ns" : "freedom.senani"
	},
	{
		"v" : 2,
		"key" : {
			"department" : 1
		},
		"name" : "department_1",
		"ns" : "freedom.senani"
	}
]

*** grouping by average age of employees based on department ***

> db.senani.aggregate([
...   {
...     $group: {
...       _id: "$department",
...       averageAge: { $avg: "$age" }
...     }
...   }
... ])
{ "_id" : "Research", "averageAge" : 26 }
{ "_id" : "Comp", "averageAge" : 26 }
{ "_id" : "IT", "averageAge" : 27 }

*** grouping by average age of employees ***

> db.senani.aggregate([
...   {
...     $group: {
...       _id: null,
...       averageAge: { $avg: "$age" }
...     }
...   }
... ])
{ "_id" : null, "averageAge" : 26.5 }

*** using index for sorting based on age ***

> db.senani.find().sort({ age: 1 })
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e11"), "name" : "Sukhdev", "age" : 24, "department" : "IT" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e12"), "name" : "Rajguru", "age" : 26, "department" : "Research" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e13"), "name" : "Bhagat", "age" : 26, "department" : "Comp" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e14"), "name" : "Ajad", "age" : 30, "department" : "IT" }

*** using index for sorting based on name ***

> db.senani.find().sort({ name: 1 })
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e14"), "name" : "Ajad", "age" : 30, "department" : "IT" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e13"), "name" : "Bhagat", "age" : 26, "department" : "Comp" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e12"), "name" : "Rajguru", "age" : 26, "department" : "Research" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e11"), "name" : "Sukhdev", "age" : 24, "department" : "IT" }
> tee assign10.txt
2025-09-24T11:52:41.283+0530 E QUERY    [thread1] SyntaxError: missing ; before statement @(shell):1:4

*** using index for sorting based on department ***

> > db.senani.find().sort({department:1})
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e13"), "name" : "Bhagat", "age" : 26, "department" : "Comp" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e11"), "name" : "Sukhdev", "age" : 24, "department" : "IT" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e14"), "name" : "Ajad", "age" : 30, "department" : "IT" }
{ "_id" : ObjectId("68d38d7f2eb9f5d9d0810e12"), "name" : "Rajguru", "age" : 26, "department" : "Research" }
> 


